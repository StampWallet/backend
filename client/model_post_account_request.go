/*
StampWallet API Server

StampWallet API Server REST Specification

API version: 0.1.0
Contact: fbstachura@gmail.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the PostAccountRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PostAccountRequest{}

// PostAccountRequest struct for PostAccountRequest
type PostAccountRequest struct {
	Email    *string `json:"email,omitempty" binding:"required"`
	Password *string `json:"password,omitempty" binding:"required"`
}

// NewPostAccountRequest instantiates a new PostAccountRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPostAccountRequest() *PostAccountRequest {
	this := PostAccountRequest{}
	return &this
}

// NewPostAccountRequestWithDefaults instantiates a new PostAccountRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPostAccountRequestWithDefaults() *PostAccountRequest {
	this := PostAccountRequest{}
	return &this
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *PostAccountRequest) GetEmail() string {
	if o == nil || isNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostAccountRequest) GetEmailOk() (*string, bool) {
	if o == nil || isNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *PostAccountRequest) HasEmail() bool {
	if o != nil && !isNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *PostAccountRequest) SetEmail(v string) {
	o.Email = &v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *PostAccountRequest) GetPassword() string {
	if o == nil || isNil(o.Password) {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostAccountRequest) GetPasswordOk() (*string, bool) {
	if o == nil || isNil(o.Password) {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *PostAccountRequest) HasPassword() bool {
	if o != nil && !isNil(o.Password) {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *PostAccountRequest) SetPassword(v string) {
	o.Password = &v
}

func (o PostAccountRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PostAccountRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !isNil(o.Password) {
		toSerialize["password"] = o.Password
	}
	return toSerialize, nil
}

type NullablePostAccountRequest struct {
	value *PostAccountRequest
	isSet bool
}

func (v NullablePostAccountRequest) Get() *PostAccountRequest {
	return v.value
}

func (v *NullablePostAccountRequest) Set(val *PostAccountRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePostAccountRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePostAccountRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostAccountRequest(val *PostAccountRequest) *NullablePostAccountRequest {
	return &NullablePostAccountRequest{value: val, isSet: true}
}

func (v NullablePostAccountRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostAccountRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
