/*
StampWallet API Server

StampWallet API Server REST Specification

API version: 0.1.0
Contact: fbstachura@gmail.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the PostUserLocalCardsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PostUserLocalCardsRequest{}

// PostUserLocalCardsRequest struct for PostUserLocalCardsRequest
type PostUserLocalCardsRequest struct {
	Name *string `json:"name,omitempty" binding:"required"`
	Type *string `json:"type,omitempty" binding:"required"`
	Code *string `json:"code,omitempty" binding:"required"`
}

// NewPostUserLocalCardsRequest instantiates a new PostUserLocalCardsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPostUserLocalCardsRequest() *PostUserLocalCardsRequest {
	this := PostUserLocalCardsRequest{}
	return &this
}

// NewPostUserLocalCardsRequestWithDefaults instantiates a new PostUserLocalCardsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPostUserLocalCardsRequestWithDefaults() *PostUserLocalCardsRequest {
	this := PostUserLocalCardsRequest{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *PostUserLocalCardsRequest) GetName() string {
	if o == nil || isNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostUserLocalCardsRequest) GetNameOk() (*string, bool) {
	if o == nil || isNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *PostUserLocalCardsRequest) HasName() bool {
	if o != nil && !isNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *PostUserLocalCardsRequest) SetName(v string) {
	o.Name = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *PostUserLocalCardsRequest) GetType() string {
	if o == nil || isNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostUserLocalCardsRequest) GetTypeOk() (*string, bool) {
	if o == nil || isNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *PostUserLocalCardsRequest) HasType() bool {
	if o != nil && !isNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *PostUserLocalCardsRequest) SetType(v string) {
	o.Type = &v
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *PostUserLocalCardsRequest) GetCode() string {
	if o == nil || isNil(o.Code) {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostUserLocalCardsRequest) GetCodeOk() (*string, bool) {
	if o == nil || isNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *PostUserLocalCardsRequest) HasCode() bool {
	if o != nil && !isNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *PostUserLocalCardsRequest) SetCode(v string) {
	o.Code = &v
}

func (o PostUserLocalCardsRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PostUserLocalCardsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !isNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !isNil(o.Code) {
		toSerialize["code"] = o.Code
	}
	return toSerialize, nil
}

type NullablePostUserLocalCardsRequest struct {
	value *PostUserLocalCardsRequest
	isSet bool
}

func (v NullablePostUserLocalCardsRequest) Get() *PostUserLocalCardsRequest {
	return v.value
}

func (v *NullablePostUserLocalCardsRequest) Set(val *PostUserLocalCardsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePostUserLocalCardsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePostUserLocalCardsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostUserLocalCardsRequest(val *PostUserLocalCardsRequest) *NullablePostUserLocalCardsRequest {
	return &NullablePostUserLocalCardsRequest{value: val, isSet: true}
}

func (v NullablePostUserLocalCardsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostUserLocalCardsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
