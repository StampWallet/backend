name: Go package
on: [push]
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
jobs:
  build:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgis/postgis
        env:
          POSTGRES_HOST_AUTH_METHOD: trust  
          POSTGRES_DB: stampwallet
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.20"
      - name: Vet
        continue-on-error: true
        run: go vet ./...
      - name: Build
        run: |
          go build -v -o stampWalletServer ./cmd/stampWalletServer.go
          GOOS=linux GOARCH=arm go build -o stampWalletServer_arm ./cmd/stampWalletServer.go
      - name: Archive artifacts
        uses: actions/upload-artifact@v3
        with:
          name: binaries
          path: |
            stampWalletServer
            stampWalletServer_arm
      - name: Test
        #continue-on-error: true
        run: go test -v ./...
        env: 
          TEST_DATABASE_URL: "postgres://postgres@localhost/stampwallet"
          TEST_DATABASE_NAME: "stampwallet"
      - name: Update coverage report
        if: github.ref == 'refs/heads/main' && always()
        env: 
          TEST_DATABASE_URL: "postgres://postgres@localhost/stampwallet"
          TEST_DATABASE_NAME: "stampwallet"
        with:
          report: 'true'
          chart: 'true'
          amend: 'true'
        uses: ncruces/go-coverage-report@v0
        continue-on-error: true

  docker:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            # set latest tag for master branch
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'main') }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: "{{defaultContext}}:."
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
