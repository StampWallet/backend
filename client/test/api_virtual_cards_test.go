/*
StampWallet API Server

Testing VirtualCardsApiService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package openapi

import (
	"context"
	openapiclient "github.com/GIT_USER_ID/GIT_REPO_ID"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
)

func Test_openapi_VirtualCardsApiService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test VirtualCardsApiService AddVirtualCard", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var businessId string

		resp, httpRes, err := apiClient.VirtualCardsApi.AddVirtualCard(context.Background(), businessId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test VirtualCardsApiService BuyItem", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var businessId string
		var itemDefinitionId string

		resp, httpRes, err := apiClient.VirtualCardsApi.BuyItem(context.Background(), businessId, itemDefinitionId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test VirtualCardsApiService DeleteItem", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var businessId string
		var itemId string

		resp, httpRes, err := apiClient.VirtualCardsApi.DeleteItem(context.Background(), businessId, itemId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test VirtualCardsApiService DeleteVirtualCard", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var businessId string

		resp, httpRes, err := apiClient.VirtualCardsApi.DeleteVirtualCard(context.Background(), businessId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test VirtualCardsApiService GetVirtualCard", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var businessId string

		resp, httpRes, err := apiClient.VirtualCardsApi.GetVirtualCard(context.Background(), businessId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
