/*
StampWallet API Server

StampWallet API Server REST Specification

API version: 0.1.0
Contact: fbstachura@gmail.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the PostAccountPasswordRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PostAccountPasswordRequest{}

// PostAccountPasswordRequest struct for PostAccountPasswordRequest
type PostAccountPasswordRequest struct {
	Password    *string `json:"password,omitempty"`
	OldPassword *string `json:"oldPassword,omitempty"`
}

// NewPostAccountPasswordRequest instantiates a new PostAccountPasswordRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPostAccountPasswordRequest() *PostAccountPasswordRequest {
	this := PostAccountPasswordRequest{}
	return &this
}

// NewPostAccountPasswordRequestWithDefaults instantiates a new PostAccountPasswordRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPostAccountPasswordRequestWithDefaults() *PostAccountPasswordRequest {
	this := PostAccountPasswordRequest{}
	return &this
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *PostAccountPasswordRequest) GetPassword() string {
	if o == nil || isNil(o.Password) {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostAccountPasswordRequest) GetPasswordOk() (*string, bool) {
	if o == nil || isNil(o.Password) {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *PostAccountPasswordRequest) HasPassword() bool {
	if o != nil && !isNil(o.Password) {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *PostAccountPasswordRequest) SetPassword(v string) {
	o.Password = &v
}

// GetOldPassword returns the OldPassword field value if set, zero value otherwise.
func (o *PostAccountPasswordRequest) GetOldPassword() string {
	if o == nil || isNil(o.OldPassword) {
		var ret string
		return ret
	}
	return *o.OldPassword
}

// GetOldPasswordOk returns a tuple with the OldPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostAccountPasswordRequest) GetOldPasswordOk() (*string, bool) {
	if o == nil || isNil(o.OldPassword) {
		return nil, false
	}
	return o.OldPassword, true
}

// HasOldPassword returns a boolean if a field has been set.
func (o *PostAccountPasswordRequest) HasOldPassword() bool {
	if o != nil && !isNil(o.OldPassword) {
		return true
	}

	return false
}

// SetOldPassword gets a reference to the given string and assigns it to the OldPassword field.
func (o *PostAccountPasswordRequest) SetOldPassword(v string) {
	o.OldPassword = &v
}

func (o PostAccountPasswordRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PostAccountPasswordRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Password) {
		toSerialize["password"] = o.Password
	}
	if !isNil(o.OldPassword) {
		toSerialize["oldPassword"] = o.OldPassword
	}
	return toSerialize, nil
}

type NullablePostAccountPasswordRequest struct {
	value *PostAccountPasswordRequest
	isSet bool
}

func (v NullablePostAccountPasswordRequest) Get() *PostAccountPasswordRequest {
	return v.value
}

func (v *NullablePostAccountPasswordRequest) Set(val *PostAccountPasswordRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePostAccountPasswordRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePostAccountPasswordRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostAccountPasswordRequest(val *PostAccountPasswordRequest) *NullablePostAccountPasswordRequest {
	return &NullablePostAccountPasswordRequest{value: val, isSet: true}
}

func (v NullablePostAccountPasswordRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostAccountPasswordRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
